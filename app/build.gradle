apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlinx-serialization'

android {
    compileSdkVersion 31
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId "io.github.lordraydenmk.superheroesapp"
        minSdkVersion 26
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "io.github.lordraydenmk.superheroesapp.TestRunner"

        if (project.hasProperty("marvel_public_api_key")) {
            def marvelPublicKey = '"' + project.property("marvel_public_api_key") + '"'
            def marvelPrivateKey = '"' + project.property("marvel_private_api_key") + '"'
            buildConfigField("String", "MARVEL_PUBLIC_API_KEY", marvelPublicKey)
            buildConfigField("String", "MARVEL_PRIVATE_API_KEY", marvelPrivateKey)
        } else {
            // the app needs `marvel_public_api_key` and `marvel_private_api_key`
            // as gradle properties to run
            // to get one visit: https://developer.marvel.com/account
            throw new GradleException("Please provide the Marvel API keys as gradle properties")
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.0.4"
    }

    sourceSets {
        test.java.srcDirs += "src/testFixtures/kotlin"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    // For Kotlin projects
    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs += [
                "-Xopt-in=kotlin.RequiresOptIn",
                "-Xuse-experimental=androidx.compose.foundation.ExperimentalFoundationApi"
        ]
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
        animationsDisabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
}

dependencies {
    def coroutines = "1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    def compose = "1.0.5"
    implementation "androidx.compose.ui:ui:$compose"
    implementation "androidx.compose.foundation:foundation:$compose"
    implementation "androidx.compose.material:material:$compose"
    implementation "androidx.compose.ui:ui-tooling:$compose"

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.1.0"
    def lifecycle = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation 'androidx.fragment:fragment-ktx:1.4.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    def nav_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation "io.coil-kt:coil-compose:1.4.0"

    def retrofit = "2.9.0"
    def okhttp = "4.9.3"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"

    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose"

    def kotest = "5.2.2"
    testImplementation "io.kotest:kotest-runner-junit5-jvm:$kotest"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$kotest"
    testImplementation 'app.cash.turbine:turbine:0.7.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    def espresso = "3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttp"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose"

}