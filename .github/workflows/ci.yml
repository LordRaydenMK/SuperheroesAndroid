name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Unit Tests
        run: ./gradlew test -Pmarvel_public_api_key=${{ secrets.MARVEL_PUBLIC_API_KEY }} -Pmarvel_private_api_key=${{ secrets.MARVEL_PRIVATE_API_KEY }}
    
      - name: Build the app
        run: ./gradlew assemble -Pmarvel_public_api_key=${{ secrets.MARVEL_PUBLIC_API_KEY }} -Pmarvel_private_api_key=${{ secrets.MARVEL_PRIVATE_API_KEY }}


  test:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Java (Adopt OpenJDK v11)
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Run Espresso UI Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        script: ./gradlew connectedCheck -Pandroid.testInstrumentationRunnerArguments.size=medium -Pmarvel_public_api_key=${{ secrets.MARVEL_PUBLIC_API_KEY }} -Pmarvel_private_api_key=${{ secrets.MARVEL_PRIVATE_API_KEY }} --stacktrace

    - name: Install Maestro
      run: | 
        curl -Ls "https://get.maestro.mobile.dev" | bash
        echo "$HOME/.maestro/bin" >> $GITHUB_PATH

    - name: Run Maestro E2E Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        script: |
          ./gradlew installDebug -Pmarvel_public_api_key=${{ secrets.MARVEL_PUBLIC_API_KEY }} -Pmarvel_private_api_key=${{ secrets.MARVEL_PRIVATE_API_KEY }}
          maestro test app/src/maestro/flows/flow.yml

    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: app/build/reports/androidTests/connected/